{"version":3,"sources":["Components/CreateShortLink/index.js","Pages/App/index.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","display","alignItems","input","marginLeft","flex","minWidth","insertLinkIcon","sendIcon","createBtn","paddingTop","paddingBottom","paddingLeft","paddingRight","CreateShortLink","link","handleChange","submitLink","classes","createNewLink","Grid","container","direction","justify","Paper","component","className","InputBase","placeholder","inputProps","onChange","value","fullWidth","Button","variant","color","disableElevation","onClick","endIcon","apiEndpoint","window","location","protocol","host","flexGrow","paper","textAlign","paperTitle","books","magrinTop","App","React","useState","shortUrl","setShortUrl","errorMessage","setErrorMessage","setLink","createShortLink","a","isURL","superagent","post","send","then","response","body","data","console","log","copy","catch","error","message","CssBaseline","Container","maxWidth","square","item","xs","Typography","align","event","target","Alert","severity","onClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.474abd00.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddIcon from '@material-ui/icons/Add'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    // marginTop: theme.spacing(10),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    minWidth: 560,\n  },\n  insertLinkIcon: {\n    marginLeft: theme.spacing(2),\n  },\n  sendIcon: {\n    marginLeft: theme.spacing(2),\n  },\n  createBtn: {\n    marginLeft: theme.spacing(2),\n    paddingTop: theme.spacing(1.5),\n    paddingBottom: theme.spacing(1.5),\n    paddingLeft: theme.spacing(2.5),\n    paddingRight: theme.spacing(2.5),\n  }\n}));\n\nconst CreateShortLink = ({ link, handleChange, submitLink, createNewLink }) => {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Paper component=\"form\" className={classes.root}>\n        <InsertLinkIcon className={classes.insertLinkIcon} />\n        <InputBase\n          className={classes.input}\n          placeholder=\"Paste URL to shortify\"\n          inputProps={{ 'aria-label': 'paste url to shortify' }}\n          onChange={handleChange}\n          value={link}\n          fullWidth\n        />\n      </Paper>\n      <Button variant=\"contained\" color=\"primary\" disableElevation onClick={() => submitLink(link)} className={classes.createBtn} endIcon={<SendIcon />}> CREATE </Button>\n      {/* <Button variant=\"contained\" color=\"primary\" disableElevation onClick={() => createNewLink()} className={classes.createBtn} endIcon={<AddIcon />}> New </Button> */}\n    </Grid>\n  );\n}\n\nexport default CreateShortLink;","import React from 'react';\nimport superagent from 'superagent';\nimport copy from 'copy-to-clipboard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { isURL } from 'validator'\nimport CreateShortLink from '../../Components/CreateShortLink';\n\nlet apiEndpoint = '/api/v1/link';\nif (process.env.NODE_ENV !== 'production') {\n  apiEndpoint = 'http://localhost:8000/api/v1/link'\n} else {\n  apiEndpoint = `${window.location.protocol}//${window.location.host}/api/v1/link`\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(10),\n  },\n  paper: {\n    padding: theme.spacing(20),\n    textAlign: 'center',\n  },\n  paperTitle: {\n    paddingTop: theme.spacing(2),\n  },\n  books: {\n    magrinTop: theme.spacing(5),\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [shortUrl, setShortUrl] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  const createShortLink = async (link) => {\n    if (!isURL(link)) {\n      setErrorMessage('Entered link is not valid')\n    } else {\n      setErrorMessage('')\n      superagent\n        .post(apiEndpoint)\n        .send({ link })\n        .then(response => response.body)\n        .then(data => {\n          console.log(data, data.shortUrl)\n          setShortUrl(data.shortUrl);\n          copy(data.shortUrl);\n        })\n        .catch(error => {\n          if (error.response && error.response.message) {\n            setErrorMessage(error.response.message);\n          } else {\n            setErrorMessage('Failed to create short URL');\n          }\n        })\n    }\n  };\n\n  const createNewLink = () => {\n    setLink('');\n    setShortUrl('');\n    setErrorMessage('');\n  }\n\n  const renderAlert = () => {\n    if (errorMessage) {\n      return (<Alert severity=\"error\" onClose={() => {\n        setErrorMessage('')\n      }}>{errorMessage}</Alert>)\n    } else if (shortUrl) {\n      return (<Alert severity=\"success\" onClose={() => {\n        setLink('');\n        setShortUrl('');\n        setErrorMessage('');\n      }}><strong>{shortUrl}</strong>  Copied to clipboard</Alert>)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Paper variant=\"outlined\" square className={classes.paper}>\n          <Grid container spacing={6} direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <Typography align=\"center\" variant=\"h4\" className={classes.paperTitle}>SHORTIFY</Typography>\n              <Typography align=\"center\" variant=\"subtitle1\">Create a short link</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <CreateShortLink link={link} handleChange={(event) => { setLink(event.target.value) }} submitLink={createShortLink} createNewLink={createNewLink} /> \n            </Grid>\n            <Grid item xs={12}>\n              {renderAlert()}\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}